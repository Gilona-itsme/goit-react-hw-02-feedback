{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","data/constansFeedBack.js","components/App.js","index.js","components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["Section","title","children","className","FeedbackOptions","options","onLeaveFeedback","map","option","feedback","s","FeedbackButton","type","data-feedback","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","list","item","itemTotal","FEEDBACK_OPTIONS","App","state","Good","Neutral","Bad","handlerFeedback","e","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAgBeA,G,MAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAU,UAAnB,UACE,6BAAKF,IACJC,O,gBC+BUE,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAKlC,OACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OArBI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUH,EAAsB,EAAtBA,gBAClC,OACE,wBACEH,UAAWO,IAAEC,eAEbC,KAAK,SACLC,gBAAeJ,EACfK,QAASR,EALX,SAOGG,GALIA,GAkBHE,CAAe,CAAEF,SAAUD,EAAQF,0B,gBCnB5BS,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC+B3BC,EA1BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACGD,EAAQ,GACP,qBAAIlB,UAAWO,IAAEa,KAAjB,UACE,qBAAIpB,UAAWO,IAAEc,KAAjB,mBAA8BN,KAC9B,qBAAIf,UAAWO,IAAEc,KAAjB,sBAAiCL,KACjC,qBAAIhB,UAAWO,IAAEc,KAAjB,kBAA6BJ,KAC7B,qBAAIjB,UAAWO,IAAEe,UAAjB,oBAAoCJ,KACpC,qBAAIlB,UAAWO,IAAEe,UAAjB,gCACsBH,EADtB,WAKO,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BCrB/BU,EAAmB,CAAC,OAAQ,UAAW,OCQ/BC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,gBAAkB,SAACC,GAAO,IAChBxB,EAAawB,EAAEC,OAAOC,QAAtB1B,SACR,EAAK2B,UAAS,SAACC,GAAD,sBAAmB5B,EAAW4B,EAAU5B,GAAY,O,EAGpE6B,mBAAqB,WAAO,IAAD,EACM,EAAKV,MACpC,OAFyB,EACjBC,KADiB,EACXC,QADW,EACFC,K,EAIzBQ,gCAAkC,WAAO,IAC/BV,EAAS,EAAKD,MAAdC,KACFR,EAAQ,EAAKiB,qBACnB,OAAOjB,EAAQmB,KAAKC,MAAOZ,EAAOR,EAAS,KAAO,G,uDAG1C,IAAD,EACwBqB,KAAKd,MAA5BC,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBV,EAAQqB,KAAKJ,qBACbhB,EAAqBoB,KAAKH,kCAChC,OACE,gCACE,cAAC,EAAD,CAAStC,MAAM,yBAAf,SACE,cAAC,EAAD,CACEI,QAASqB,EACTpB,gBAAiBoC,KAAKV,oBAG1B,cAAC,EAAD,CAAS/B,MAAM,aAAf,SACE,cAAC,EAAD,CACEiB,KAAMW,EACNV,QAASW,EACTV,IAAKW,EACLV,MAAOA,EACPC,mBAAoBA,a,GAzCCqB,aCHjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,UAAY,gC,kBCA9FD,EAAOC,QAAU,CAAC,eAAiB,2C","file":"static/js/main.e79d905a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Section.scss\";\n\nconst Section = ({ title, children }) => (\n  <section className=\"Section\">\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./FeedbackOptions.module.scss\";\n\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <button\n      className={s.FeedbackButton}\n      key={feedback}\n      type=\"button\"\n      data-feedback={feedback}\n      onClick={onLeaveFeedback}\n    >\n      {feedback}\n    </button>\n  );\n};\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  // return options.map((option) => (\n  //   <FeedbackButton feedback={option} onLeaveFeedback={onLeaveFeedback} />\n  // ));\n\n  return (\n    <div>\n      {options.map((option) =>\n        FeedbackButton({ feedback: option, onLeaveFeedback })\n      )}\n    </div>\n  );\n};\n\nFeedbackButton.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./Statistics.module.scss\";\n\nimport Notification from \"../Notification\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      {total > 0 && (\n        <ul className={s.list}>\n          <li className={s.item}>Good: {good}</li>\n          <li className={s.item}>Neutral: {neutral}</li>\n          <li className={s.item}>Bad: {bad}</li>\n          <li className={s.itemTotal}>Total: {total}</li>\n          <li className={s.itemTotal}>\n            Positive feedback: {positivePercentage} %\n          </li>\n        </ul>\n      )}\n      {total === 0 && <Notification message=\"No feedback given\" />}\n    </>\n  );\n};\n\nStatistics.propTypes = {\ngood: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","export const FEEDBACK_OPTIONS = [\"Good\", \"Neutral\", \"Bad\"];\n","import React, { Component } from \"react\";\n\nimport Section from \"./Section\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\n\nimport { FEEDBACK_OPTIONS } from \"../data/constansFeedBack\";\n\nexport default class App extends Component {\n  state = {\n    Good: 0,\n    Neutral: 0,\n    Bad: 0,\n  };\n\n  handlerFeedback = (e) => {\n    const { feedback } = e.target.dataset;\n    this.setState((prevState) => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { Good, Neutral, Bad } = this.state;\n    return Good + Neutral + Bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { Good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((Good / total) * 100) : 0;\n  };\n\n  render() {\n    const { Good, Neutral, Bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <div>\n        <Section title=\"Please, leave feedback\">\n          <FeedbackOptions\n            options={FEEDBACK_OPTIONS}\n            onLeaveFeedback={this.handlerFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={Good}\n            neutral={Neutral}\n            bad={Bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3lk2d\",\"item\":\"Statistics_item__2OFvC\",\"itemTotal\":\"Statistics_itemTotal__3FSeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackButton\":\"FeedbackOptions_FeedbackButton__2dHO0\"};"],"sourceRoot":""}